version: 2

defaults: &defaults
  docker:
    - image: circleci/ruby:2.6.5-node
  working_directory: ~/repo

workflows:
  version: 2
  test-and-publish:
    jobs:
      - test:
          filters:
            tags:
              # this enables circleci to trigger on tags
              only: /.*/

      - publish:
          requires:
            - test
          filters:
            tags:
              only: /^v[0-9]\.[0-9]\.[0-9].*/
            branches:
              ignore: /.*/

jobs:
  test:
    <<: *defaults

    steps:
      - checkout

      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run: ./cc-test-reporter before-build

      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "Gemfile.lock" }}
          - v2-dependencies-

      - run:
          name: install dependencies
          command: |
            gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v2-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: run tests
          command: |
            mkdir -p /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            $TEST_FILES

      - run:
          name: Code Climate Test Coverage
          command: |
            ./cc-test-reporter after-build --exit-code $?

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results

  upload-coverage:
    <<: *defaults
    environment:
      CC_TEST_REPORTER_ID: $CC_TEST_REPORTER_ID

    steps:
      # This will restore files from persist_to_workspace step
      # Thanks to it we will have access to CodeClimate test coverage files from
      # each parallel job. We need them in order to merge it into one file in next step.
      - attach_workspace:
          at: ~/repo
      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          # merge CodeClimate files from each parallel job into sum coverage
          # and then upload it to CodeClimate dashboard
          command: |
            ./cc-test-reporter sum-coverage --output - codeclimate.*.json | ./cc-test-reporter upload-coverage --debug --input -

  publish:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "Gemfile.lock" }}
          - v2-dependencies-

      - run:
          name: install dependencies
          command: |
            gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v2-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: Setup Rubygems
          command: bash .circleci/setup-rubygems.sh

      - run:
          name: Publish to Rubygems
          command: |
            CURRENT_VERSION=$(ruby -r "./lib/story_branch/version.rb" -e "puts StoryBranch::VERSION")
            gem build story_branch.gemspec
            gem push "story_branch-${CURRENT_VERSION}.gem"
            shred -u ~/.gem/credentials
